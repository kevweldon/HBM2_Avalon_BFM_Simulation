	qsys_top u0 (
		.hbm_top_pll_ref_clk_clk          (_connected_to_hbm_top_pll_ref_clk_clk_),          //   input,    width = 1,       hbm_top_pll_ref_clk.clk
		.hbm_top_wmcrst_n_in_reset_n      (_connected_to_hbm_top_wmcrst_n_in_reset_n_),      //   input,    width = 1,       hbm_top_wmcrst_n_in.reset_n
		.hbm_top_hbm_only_reset_in_reset  (_connected_to_hbm_top_hbm_only_reset_in_reset_),  //   input,    width = 1, hbm_top_hbm_only_reset_in.reset
		.hbm_top_status_local_cal_success (_connected_to_hbm_top_status_local_cal_success_), //  output,    width = 1,            hbm_top_status.local_cal_success
		.hbm_top_status_local_cal_fail    (_connected_to_hbm_top_status_local_cal_fail_),    //  output,    width = 1,                          .local_cal_fail
		.mem_0_ck_t                       (_connected_to_mem_0_ck_t_),                       //  output,    width = 1,                     mem_0.ck_t
		.mem_0_ck_c                       (_connected_to_mem_0_ck_c_),                       //  output,    width = 1,                          .ck_c
		.mem_0_cke                        (_connected_to_mem_0_cke_),                        //  output,    width = 1,                          .cke
		.mem_0_c                          (_connected_to_mem_0_c_),                          //  output,    width = 8,                          .c
		.mem_0_r                          (_connected_to_mem_0_r_),                          //  output,    width = 6,                          .r
		.mem_0_dq                         (_connected_to_mem_0_dq_),                         //   inout,  width = 128,                          .dq
		.mem_0_dm                         (_connected_to_mem_0_dm_),                         //   inout,   width = 16,                          .dm
		.mem_0_dbi                        (_connected_to_mem_0_dbi_),                        //   inout,   width = 16,                          .dbi
		.mem_0_par                        (_connected_to_mem_0_par_),                        //   inout,    width = 4,                          .par
		.mem_0_derr                       (_connected_to_mem_0_derr_),                       //   inout,    width = 4,                          .derr
		.mem_0_rdqs_t                     (_connected_to_mem_0_rdqs_t_),                     //   input,    width = 4,                          .rdqs_t
		.mem_0_rdqs_c                     (_connected_to_mem_0_rdqs_c_),                     //   input,    width = 4,                          .rdqs_c
		.mem_0_wdqs_t                     (_connected_to_mem_0_wdqs_t_),                     //  output,    width = 4,                          .wdqs_t
		.mem_0_wdqs_c                     (_connected_to_mem_0_wdqs_c_),                     //  output,    width = 4,                          .wdqs_c
		.mem_0_rd                         (_connected_to_mem_0_rd_),                         //   inout,    width = 8,                          .rd
		.mem_0_rr                         (_connected_to_mem_0_rr_),                         //  output,    width = 1,                          .rr
		.mem_0_rc                         (_connected_to_mem_0_rc_),                         //  output,    width = 1,                          .rc
		.mem_0_aerr                       (_connected_to_mem_0_aerr_),                       //   input,    width = 1,                          .aerr
		.m2u_bridge_cattrip               (_connected_to_m2u_bridge_cattrip_),               //   input,    width = 1,                m2u_bridge.cattrip
		.m2u_bridge_temp                  (_connected_to_m2u_bridge_temp_),                  //   input,    width = 3,                          .temp
		.m2u_bridge_wso                   (_connected_to_m2u_bridge_wso_),                   //   input,    width = 8,                          .wso
		.m2u_bridge_reset_n               (_connected_to_m2u_bridge_reset_n_),               //  output,    width = 1,                          .reset_n
		.m2u_bridge_wrst_n                (_connected_to_m2u_bridge_wrst_n_),                //  output,    width = 1,                          .wrst_n
		.m2u_bridge_wrck                  (_connected_to_m2u_bridge_wrck_),                  //  output,    width = 1,                          .wrck
		.m2u_bridge_shiftwr               (_connected_to_m2u_bridge_shiftwr_),               //  output,    width = 1,                          .shiftwr
		.m2u_bridge_capturewr             (_connected_to_m2u_bridge_capturewr_),             //  output,    width = 1,                          .capturewr
		.m2u_bridge_updatewr              (_connected_to_m2u_bridge_updatewr_),              //  output,    width = 1,                          .updatewr
		.m2u_bridge_selectwir             (_connected_to_m2u_bridge_selectwir_),             //  output,    width = 1,                          .selectwir
		.m2u_bridge_wsi                   (_connected_to_m2u_bridge_wsi_),                   //  output,    width = 1,                          .wsi
		.hbm_top_apb_0_ur_paddr           (_connected_to_hbm_top_apb_0_ur_paddr_),           //   input,   width = 16,             hbm_top_apb_0.ur_paddr
		.hbm_top_apb_0_ur_psel            (_connected_to_hbm_top_apb_0_ur_psel_),            //   input,    width = 1,                          .ur_psel
		.hbm_top_apb_0_ur_penable         (_connected_to_hbm_top_apb_0_ur_penable_),         //   input,    width = 1,                          .ur_penable
		.hbm_top_apb_0_ur_pwrite          (_connected_to_hbm_top_apb_0_ur_pwrite_),          //   input,    width = 1,                          .ur_pwrite
		.hbm_top_apb_0_ur_pwdata          (_connected_to_hbm_top_apb_0_ur_pwdata_),          //   input,   width = 16,                          .ur_pwdata
		.hbm_top_apb_0_ur_pstrb           (_connected_to_hbm_top_apb_0_ur_pstrb_),           //   input,    width = 2,                          .ur_pstrb
		.hbm_top_apb_0_ur_prready         (_connected_to_hbm_top_apb_0_ur_prready_),         //  output,    width = 1,                          .ur_prready
		.hbm_top_apb_0_ur_prdata          (_connected_to_hbm_top_apb_0_ur_prdata_),          //  output,   width = 16,                          .ur_prdata
		.reset_reset                      (_connected_to_reset_reset_),                      //   input,    width = 1,                     reset.reset
		.top_core_clk_iopll_reset_reset   (_connected_to_top_core_clk_iopll_reset_reset_),   //   input,    width = 1,  top_core_clk_iopll_reset.reset
		.top_core_clk_iopll_refclk_clk    (_connected_to_top_core_clk_iopll_refclk_clk_)     //   input,    width = 1, top_core_clk_iopll_refclk.clk
	);

