	component dma_rd_master is
		generic (
			AV_ADDRESS_W               : integer := 64;
			AV_SYMBOL_W                : integer := 8;
			AV_NUMSYMBOLS              : integer := 32;
			AV_BURSTCOUNT_W            : integer := 5;
			AV_READRESPONSE_W          : integer := 8;
			AV_WRITERESPONSE_W         : integer := 8;
			USE_READ                   : integer := 0;
			USE_WRITE                  : integer := 1;
			USE_ADDRESS                : integer := 1;
			USE_BYTE_ENABLE            : integer := 1;
			USE_BURSTCOUNT             : integer := 1;
			USE_READ_DATA              : integer := 0;
			USE_READ_DATA_VALID        : integer := 0;
			USE_WRITE_DATA             : integer := 1;
			USE_BEGIN_TRANSFER         : integer := 0;
			USE_BEGIN_BURST_TRANSFER   : integer := 0;
			USE_WAIT_REQUEST           : integer := 1;
			USE_TRANSACTIONID          : integer := 0;
			USE_WRITERESPONSE          : integer := 0;
			USE_READRESPONSE           : integer := 0;
			USE_CLKEN                  : integer := 0;
			AV_CONSTANT_BURST_BEHAVIOR : integer := 1;
			AV_BURST_LINEWRAP          : integer := 1;
			AV_BURST_BNDR_ONLY         : integer := 1;
			AV_MAX_PENDING_READS       : integer := 0;
			AV_MAX_PENDING_WRITES      : integer := 0;
			AV_FIX_READ_LATENCY        : integer := 0;
			AV_READ_WAIT_TIME          : integer := 1;
			AV_WRITE_WAIT_TIME         : integer := 0;
			AV_WAITREQUEST_ALLOWANCE   : integer := 0;
			REGISTER_WAITREQUEST       : integer := 0;
			AV_REGISTERINCOMINGSIGNALS : integer := 0;
			VHDL_ID                    : integer := 0
		);
		port (
			clk             : in  std_logic                      := 'X'; -- clk
			reset           : in  std_logic                      := 'X'; -- reset
			avm_address     : out std_logic_vector(63 downto 0);         -- address
			avm_burstcount  : out std_logic_vector(4 downto 0);          -- burstcount
			avm_writedata   : out std_logic_vector(255 downto 0);        -- writedata
			avm_waitrequest : in  std_logic                      := 'X'; -- waitrequest
			avm_write       : out std_logic;                             -- write
			avm_byteenable  : out std_logic_vector(31 downto 0)          -- byteenable
		);
	end component dma_rd_master;

