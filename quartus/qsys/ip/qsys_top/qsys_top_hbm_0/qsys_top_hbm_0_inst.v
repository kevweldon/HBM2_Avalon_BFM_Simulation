	qsys_top_hbm_0 u0 (
		.pll_ref_clk                                       (_connected_to_pll_ref_clk_),                                       //   input,    width = 1,                pll_ref_clk.clk
		.ext_core_clk                                      (_connected_to_ext_core_clk_),                                      //   input,    width = 1,               ext_core_clk.clk
		.ext_core_clk_locked                               (_connected_to_ext_core_clk_locked_),                               //   input,    width = 1,        ext_core_clk_locked.export
		.wmcrst_n_in                                       (_connected_to_wmcrst_n_in_),                                       //   input,    width = 1,                wmcrst_n_in.reset_n
		.hbm_only_reset_in                                 (_connected_to_hbm_only_reset_in_),                                 //   input,    width = 1,          hbm_only_reset_in.reset
		.local_cal_success                                 (_connected_to_local_cal_success_),                                 //  output,    width = 1,                     status.local_cal_success
		.local_cal_fail                                    (_connected_to_local_cal_fail_),                                    //  output,    width = 1,                           .local_cal_fail
		.cal_lat                                           (_connected_to_cal_lat_),                                           //  output,    width = 3,                    cal_lat.cal_lat
		.ck_t_0                                            (_connected_to_ck_t_0_),                                            //  output,    width = 1,                      mem_0.ck_t
		.ck_c_0                                            (_connected_to_ck_c_0_),                                            //  output,    width = 1,                           .ck_c
		.cke_0                                             (_connected_to_cke_0_),                                             //  output,    width = 1,                           .cke
		.c_0                                               (_connected_to_c_0_),                                               //  output,    width = 8,                           .c
		.r_0                                               (_connected_to_r_0_),                                               //  output,    width = 6,                           .r
		.dq_0                                              (_connected_to_dq_0_),                                              //   inout,  width = 128,                           .dq
		.dm_0                                              (_connected_to_dm_0_),                                              //   inout,   width = 16,                           .dm
		.dbi_0                                             (_connected_to_dbi_0_),                                             //   inout,   width = 16,                           .dbi
		.par_0                                             (_connected_to_par_0_),                                             //   inout,    width = 4,                           .par
		.derr_0                                            (_connected_to_derr_0_),                                            //   inout,    width = 4,                           .derr
		.rdqs_t_0                                          (_connected_to_rdqs_t_0_),                                          //   input,    width = 4,                           .rdqs_t
		.rdqs_c_0                                          (_connected_to_rdqs_c_0_),                                          //   input,    width = 4,                           .rdqs_c
		.wdqs_t_0                                          (_connected_to_wdqs_t_0_),                                          //  output,    width = 4,                           .wdqs_t
		.wdqs_c_0                                          (_connected_to_wdqs_c_0_),                                          //  output,    width = 4,                           .wdqs_c
		.rd_0                                              (_connected_to_rd_0_),                                              //   inout,    width = 8,                           .rd
		.rr_0                                              (_connected_to_rr_0_),                                              //  output,    width = 1,                           .rr
		.rc_0                                              (_connected_to_rc_0_),                                              //  output,    width = 1,                           .rc
		.aerr_0                                            (_connected_to_aerr_0_),                                            //   input,    width = 1,                           .aerr
		.cattrip                                           (_connected_to_cattrip_),                                           //   input,    width = 1,                 m2u_bridge.cattrip
		.temp                                              (_connected_to_temp_),                                              //   input,    width = 3,                           .temp
		.wso                                               (_connected_to_wso_),                                               //   input,    width = 8,                           .wso
		.reset_n                                           (_connected_to_reset_n_),                                           //  output,    width = 1,                           .reset_n
		.wrst_n                                            (_connected_to_wrst_n_),                                            //  output,    width = 1,                           .wrst_n
		.wrck                                              (_connected_to_wrck_),                                              //  output,    width = 1,                           .wrck
		.shiftwr                                           (_connected_to_shiftwr_),                                           //  output,    width = 1,                           .shiftwr
		.capturewr                                         (_connected_to_capturewr_),                                         //  output,    width = 1,                           .capturewr
		.updatewr                                          (_connected_to_updatewr_),                                          //  output,    width = 1,                           .updatewr
		.selectwir                                         (_connected_to_selectwir_),                                         //  output,    width = 1,                           .selectwir
		.wsi                                               (_connected_to_wsi_),                                               //  output,    width = 1,                           .wsi
		.wmc_clk_0_clk                                     (_connected_to_wmc_clk_0_clk_),                                     //  output,    width = 1,                  wmc_clk_0.clk
		.phy_clk_0_clk                                     (_connected_to_phy_clk_0_clk_),                                     //  output,    width = 1,                  phy_clk_0.clk
		.wmcrst_n_0_reset_n                                (_connected_to_wmcrst_n_0_reset_n_),                                //  output,    width = 1,                 wmcrst_n_0.reset_n
		.ctrl_amm_0_1_waitrequest_n                        (_connected_to_ctrl_amm_0_1_waitrequest_n_),                        //  output,    width = 1,               ctrl_amm_0_1.waitrequest_n
		.ctrl_amm_0_1_read                                 (_connected_to_ctrl_amm_0_1_read_),                                 //   input,    width = 1,                           .read
		.ctrl_amm_0_1_write                                (_connected_to_ctrl_amm_0_1_write_),                                //   input,    width = 1,                           .write
		.ctrl_amm_0_1_address                              (_connected_to_ctrl_amm_0_1_address_),                              //   input,   width = 29,                           .address
		.ctrl_amm_0_1_readdata                             (_connected_to_ctrl_amm_0_1_readdata_),                             //  output,  width = 256,                           .readdata
		.ctrl_amm_0_1_writedata                            (_connected_to_ctrl_amm_0_1_writedata_),                            //   input,  width = 256,                           .writedata
		.ctrl_amm_0_1_burstcount                           (_connected_to_ctrl_amm_0_1_burstcount_),                           //   input,    width = 7,                           .burstcount
		.ctrl_amm_0_1_byteenable                           (_connected_to_ctrl_amm_0_1_byteenable_),                           //   input,   width = 32,                           .byteenable
		.ctrl_amm_0_1_readdatavalid                        (_connected_to_ctrl_amm_0_1_readdatavalid_),                        //  output,    width = 1,                           .readdatavalid
		.ctrl_amm_0_0_waitrequest_n                        (_connected_to_ctrl_amm_0_0_waitrequest_n_),                        //  output,    width = 1,               ctrl_amm_0_0.waitrequest_n
		.ctrl_amm_0_0_read                                 (_connected_to_ctrl_amm_0_0_read_),                                 //   input,    width = 1,                           .read
		.ctrl_amm_0_0_write                                (_connected_to_ctrl_amm_0_0_write_),                                //   input,    width = 1,                           .write
		.ctrl_amm_0_0_address                              (_connected_to_ctrl_amm_0_0_address_),                              //   input,   width = 29,                           .address
		.ctrl_amm_0_0_readdata                             (_connected_to_ctrl_amm_0_0_readdata_),                             //  output,  width = 256,                           .readdata
		.ctrl_amm_0_0_writedata                            (_connected_to_ctrl_amm_0_0_writedata_),                            //   input,  width = 256,                           .writedata
		.ctrl_amm_0_0_burstcount                           (_connected_to_ctrl_amm_0_0_burstcount_),                           //   input,    width = 7,                           .burstcount
		.ctrl_amm_0_0_byteenable                           (_connected_to_ctrl_amm_0_0_byteenable_),                           //   input,   width = 32,                           .byteenable
		.ctrl_amm_0_0_readdatavalid                        (_connected_to_ctrl_amm_0_0_readdatavalid_),                        //  output,    width = 1,                           .readdatavalid
		.ctrl_ecc_readdataerror_0_1_ctrl_ecc_readdataerror (_connected_to_ctrl_ecc_readdataerror_0_1_ctrl_ecc_readdataerror_), //  output,    width = 1, ctrl_ecc_readdataerror_0_1.ctrl_ecc_readdataerror
		.ctrl_ecc_readdataerror_0_0_ctrl_ecc_readdataerror (_connected_to_ctrl_ecc_readdataerror_0_0_ctrl_ecc_readdataerror_), //  output,    width = 1, ctrl_ecc_readdataerror_0_0.ctrl_ecc_readdataerror
		.apb_0_ur_paddr                                    (_connected_to_apb_0_ur_paddr_),                                    //   input,   width = 16,                      apb_0.ur_paddr
		.apb_0_ur_psel                                     (_connected_to_apb_0_ur_psel_),                                     //   input,    width = 1,                           .ur_psel
		.apb_0_ur_penable                                  (_connected_to_apb_0_ur_penable_),                                  //   input,    width = 1,                           .ur_penable
		.apb_0_ur_pwrite                                   (_connected_to_apb_0_ur_pwrite_),                                   //   input,    width = 1,                           .ur_pwrite
		.apb_0_ur_pwdata                                   (_connected_to_apb_0_ur_pwdata_),                                   //   input,   width = 16,                           .ur_pwdata
		.apb_0_ur_pstrb                                    (_connected_to_apb_0_ur_pstrb_),                                    //   input,    width = 2,                           .ur_pstrb
		.apb_0_ur_prready                                  (_connected_to_apb_0_ur_prready_),                                  //  output,    width = 1,                           .ur_prready
		.apb_0_ur_prdata                                   (_connected_to_apb_0_ur_prdata_)                                    //  output,   width = 16,                           .ur_prdata
	);

