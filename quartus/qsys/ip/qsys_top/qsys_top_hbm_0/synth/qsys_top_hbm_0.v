// qsys_top_hbm_0.v

// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module qsys_top_hbm_0 (
		input  wire         pll_ref_clk,                                       //                pll_ref_clk.clk
		input  wire         ext_core_clk,                                      //               ext_core_clk.clk
		input  wire         ext_core_clk_locked,                               //        ext_core_clk_locked.export
		input  wire         wmcrst_n_in,                                       //                wmcrst_n_in.reset_n
		input  wire         hbm_only_reset_in,                                 //          hbm_only_reset_in.reset
		output wire         local_cal_success,                                 //                     status.local_cal_success
		output wire         local_cal_fail,                                    //                           .local_cal_fail
		output wire [2:0]   cal_lat,                                           //                    cal_lat.cal_lat
		output wire         ck_t_0,                                            //                      mem_0.ck_t
		output wire         ck_c_0,                                            //                           .ck_c
		output wire         cke_0,                                             //                           .cke
		output wire [7:0]   c_0,                                               //                           .c
		output wire [5:0]   r_0,                                               //                           .r
		inout  wire [127:0] dq_0,                                              //                           .dq
		inout  wire [15:0]  dm_0,                                              //                           .dm
		inout  wire [15:0]  dbi_0,                                             //                           .dbi
		inout  wire [3:0]   par_0,                                             //                           .par
		inout  wire [3:0]   derr_0,                                            //                           .derr
		input  wire [3:0]   rdqs_t_0,                                          //                           .rdqs_t
		input  wire [3:0]   rdqs_c_0,                                          //                           .rdqs_c
		output wire [3:0]   wdqs_t_0,                                          //                           .wdqs_t
		output wire [3:0]   wdqs_c_0,                                          //                           .wdqs_c
		inout  wire [7:0]   rd_0,                                              //                           .rd
		output wire         rr_0,                                              //                           .rr
		output wire         rc_0,                                              //                           .rc
		input  wire         aerr_0,                                            //                           .aerr
		input  wire         cattrip,                                           //                 m2u_bridge.cattrip
		input  wire [2:0]   temp,                                              //                           .temp
		input  wire [7:0]   wso,                                               //                           .wso
		output wire         reset_n,                                           //                           .reset_n
		output wire         wrst_n,                                            //                           .wrst_n
		output wire         wrck,                                              //                           .wrck
		output wire         shiftwr,                                           //                           .shiftwr
		output wire         capturewr,                                         //                           .capturewr
		output wire         updatewr,                                          //                           .updatewr
		output wire         selectwir,                                         //                           .selectwir
		output wire         wsi,                                               //                           .wsi
		output wire         wmc_clk_0_clk,                                     //                  wmc_clk_0.clk
		output wire         phy_clk_0_clk,                                     //                  phy_clk_0.clk
		output wire         wmcrst_n_0_reset_n,                                //                 wmcrst_n_0.reset_n
		output wire         ctrl_amm_0_1_waitrequest_n,                        //               ctrl_amm_0_1.waitrequest_n
		input  wire         ctrl_amm_0_1_read,                                 //                           .read
		input  wire         ctrl_amm_0_1_write,                                //                           .write
		input  wire [28:0]  ctrl_amm_0_1_address,                              //                           .address
		output wire [255:0] ctrl_amm_0_1_readdata,                             //                           .readdata
		input  wire [255:0] ctrl_amm_0_1_writedata,                            //                           .writedata
		input  wire [6:0]   ctrl_amm_0_1_burstcount,                           //                           .burstcount
		input  wire [31:0]  ctrl_amm_0_1_byteenable,                           //                           .byteenable
		output wire         ctrl_amm_0_1_readdatavalid,                        //                           .readdatavalid
		output wire         ctrl_amm_0_0_waitrequest_n,                        //               ctrl_amm_0_0.waitrequest_n
		input  wire         ctrl_amm_0_0_read,                                 //                           .read
		input  wire         ctrl_amm_0_0_write,                                //                           .write
		input  wire [28:0]  ctrl_amm_0_0_address,                              //                           .address
		output wire [255:0] ctrl_amm_0_0_readdata,                             //                           .readdata
		input  wire [255:0] ctrl_amm_0_0_writedata,                            //                           .writedata
		input  wire [6:0]   ctrl_amm_0_0_burstcount,                           //                           .burstcount
		input  wire [31:0]  ctrl_amm_0_0_byteenable,                           //                           .byteenable
		output wire         ctrl_amm_0_0_readdatavalid,                        //                           .readdatavalid
		output wire         ctrl_ecc_readdataerror_0_1_ctrl_ecc_readdataerror, // ctrl_ecc_readdataerror_0_1.ctrl_ecc_readdataerror
		output wire         ctrl_ecc_readdataerror_0_0_ctrl_ecc_readdataerror, // ctrl_ecc_readdataerror_0_0.ctrl_ecc_readdataerror
		input  wire [15:0]  apb_0_ur_paddr,                                    //                      apb_0.ur_paddr
		input  wire         apb_0_ur_psel,                                     //                           .ur_psel
		input  wire         apb_0_ur_penable,                                  //                           .ur_penable
		input  wire         apb_0_ur_pwrite,                                   //                           .ur_pwrite
		input  wire [15:0]  apb_0_ur_pwdata,                                   //                           .ur_pwdata
		input  wire [1:0]   apb_0_ur_pstrb,                                    //                           .ur_pstrb
		output wire         apb_0_ur_prready,                                  //                           .ur_prready
		output wire [15:0]  apb_0_ur_prdata                                    //                           .ur_prdata
	);

	qsys_top_hbm_0_altera_hbm_1961_uzzthcq hbm_0 (
		.pll_ref_clk                                       (pll_ref_clk),                                       //   input,    width = 1,                pll_ref_clk.clk
		.ext_core_clk                                      (ext_core_clk),                                      //   input,    width = 1,               ext_core_clk.clk
		.ext_core_clk_locked                               (ext_core_clk_locked),                               //   input,    width = 1,        ext_core_clk_locked.export
		.wmcrst_n_in                                       (wmcrst_n_in),                                       //   input,    width = 1,                wmcrst_n_in.reset_n
		.hbm_only_reset_in                                 (hbm_only_reset_in),                                 //   input,    width = 1,          hbm_only_reset_in.reset
		.local_cal_success                                 (local_cal_success),                                 //  output,    width = 1,                     status.local_cal_success
		.local_cal_fail                                    (local_cal_fail),                                    //  output,    width = 1,                           .local_cal_fail
		.cal_lat                                           (cal_lat),                                           //  output,    width = 3,                    cal_lat.cal_lat
		.ck_t_0                                            (ck_t_0),                                            //  output,    width = 1,                      mem_0.ck_t
		.ck_c_0                                            (ck_c_0),                                            //  output,    width = 1,                           .ck_c
		.cke_0                                             (cke_0),                                             //  output,    width = 1,                           .cke
		.c_0                                               (c_0),                                               //  output,    width = 8,                           .c
		.r_0                                               (r_0),                                               //  output,    width = 6,                           .r
		.dq_0                                              (dq_0),                                              //   inout,  width = 128,                           .dq
		.dm_0                                              (dm_0),                                              //   inout,   width = 16,                           .dm
		.dbi_0                                             (dbi_0),                                             //   inout,   width = 16,                           .dbi
		.par_0                                             (par_0),                                             //   inout,    width = 4,                           .par
		.derr_0                                            (derr_0),                                            //   inout,    width = 4,                           .derr
		.rdqs_t_0                                          (rdqs_t_0),                                          //   input,    width = 4,                           .rdqs_t
		.rdqs_c_0                                          (rdqs_c_0),                                          //   input,    width = 4,                           .rdqs_c
		.wdqs_t_0                                          (wdqs_t_0),                                          //  output,    width = 4,                           .wdqs_t
		.wdqs_c_0                                          (wdqs_c_0),                                          //  output,    width = 4,                           .wdqs_c
		.rd_0                                              (rd_0),                                              //   inout,    width = 8,                           .rd
		.rr_0                                              (rr_0),                                              //  output,    width = 1,                           .rr
		.rc_0                                              (rc_0),                                              //  output,    width = 1,                           .rc
		.aerr_0                                            (aerr_0),                                            //   input,    width = 1,                           .aerr
		.cattrip                                           (cattrip),                                           //   input,    width = 1,                 m2u_bridge.cattrip
		.temp                                              (temp),                                              //   input,    width = 3,                           .temp
		.wso                                               (wso),                                               //   input,    width = 8,                           .wso
		.reset_n                                           (reset_n),                                           //  output,    width = 1,                           .reset_n
		.wrst_n                                            (wrst_n),                                            //  output,    width = 1,                           .wrst_n
		.wrck                                              (wrck),                                              //  output,    width = 1,                           .wrck
		.shiftwr                                           (shiftwr),                                           //  output,    width = 1,                           .shiftwr
		.capturewr                                         (capturewr),                                         //  output,    width = 1,                           .capturewr
		.updatewr                                          (updatewr),                                          //  output,    width = 1,                           .updatewr
		.selectwir                                         (selectwir),                                         //  output,    width = 1,                           .selectwir
		.wsi                                               (wsi),                                               //  output,    width = 1,                           .wsi
		.wmc_clk_0_clk                                     (wmc_clk_0_clk),                                     //  output,    width = 1,                  wmc_clk_0.clk
		.phy_clk_0_clk                                     (phy_clk_0_clk),                                     //  output,    width = 1,                  phy_clk_0.clk
		.wmcrst_n_0_reset_n                                (wmcrst_n_0_reset_n),                                //  output,    width = 1,                 wmcrst_n_0.reset_n
		.ctrl_amm_0_1_waitrequest_n                        (ctrl_amm_0_1_waitrequest_n),                        //  output,    width = 1,               ctrl_amm_0_1.waitrequest_n
		.ctrl_amm_0_1_read                                 (ctrl_amm_0_1_read),                                 //   input,    width = 1,                           .read
		.ctrl_amm_0_1_write                                (ctrl_amm_0_1_write),                                //   input,    width = 1,                           .write
		.ctrl_amm_0_1_address                              (ctrl_amm_0_1_address),                              //   input,   width = 29,                           .address
		.ctrl_amm_0_1_readdata                             (ctrl_amm_0_1_readdata),                             //  output,  width = 256,                           .readdata
		.ctrl_amm_0_1_writedata                            (ctrl_amm_0_1_writedata),                            //   input,  width = 256,                           .writedata
		.ctrl_amm_0_1_burstcount                           (ctrl_amm_0_1_burstcount),                           //   input,    width = 7,                           .burstcount
		.ctrl_amm_0_1_byteenable                           (ctrl_amm_0_1_byteenable),                           //   input,   width = 32,                           .byteenable
		.ctrl_amm_0_1_readdatavalid                        (ctrl_amm_0_1_readdatavalid),                        //  output,    width = 1,                           .readdatavalid
		.ctrl_amm_0_0_waitrequest_n                        (ctrl_amm_0_0_waitrequest_n),                        //  output,    width = 1,               ctrl_amm_0_0.waitrequest_n
		.ctrl_amm_0_0_read                                 (ctrl_amm_0_0_read),                                 //   input,    width = 1,                           .read
		.ctrl_amm_0_0_write                                (ctrl_amm_0_0_write),                                //   input,    width = 1,                           .write
		.ctrl_amm_0_0_address                              (ctrl_amm_0_0_address),                              //   input,   width = 29,                           .address
		.ctrl_amm_0_0_readdata                             (ctrl_amm_0_0_readdata),                             //  output,  width = 256,                           .readdata
		.ctrl_amm_0_0_writedata                            (ctrl_amm_0_0_writedata),                            //   input,  width = 256,                           .writedata
		.ctrl_amm_0_0_burstcount                           (ctrl_amm_0_0_burstcount),                           //   input,    width = 7,                           .burstcount
		.ctrl_amm_0_0_byteenable                           (ctrl_amm_0_0_byteenable),                           //   input,   width = 32,                           .byteenable
		.ctrl_amm_0_0_readdatavalid                        (ctrl_amm_0_0_readdatavalid),                        //  output,    width = 1,                           .readdatavalid
		.ctrl_ecc_readdataerror_0_1_ctrl_ecc_readdataerror (ctrl_ecc_readdataerror_0_1_ctrl_ecc_readdataerror), //  output,    width = 1, ctrl_ecc_readdataerror_0_1.ctrl_ecc_readdataerror
		.ctrl_ecc_readdataerror_0_0_ctrl_ecc_readdataerror (ctrl_ecc_readdataerror_0_0_ctrl_ecc_readdataerror), //  output,    width = 1, ctrl_ecc_readdataerror_0_0.ctrl_ecc_readdataerror
		.apb_0_ur_paddr                                    (apb_0_ur_paddr),                                    //   input,   width = 16,                      apb_0.ur_paddr
		.apb_0_ur_psel                                     (apb_0_ur_psel),                                     //   input,    width = 1,                           .ur_psel
		.apb_0_ur_penable                                  (apb_0_ur_penable),                                  //   input,    width = 1,                           .ur_penable
		.apb_0_ur_pwrite                                   (apb_0_ur_pwrite),                                   //   input,    width = 1,                           .ur_pwrite
		.apb_0_ur_pwdata                                   (apb_0_ur_pwdata),                                   //   input,   width = 16,                           .ur_pwdata
		.apb_0_ur_pstrb                                    (apb_0_ur_pstrb),                                    //   input,    width = 2,                           .ur_pstrb
		.apb_0_ur_prready                                  (apb_0_ur_prready),                                  //  output,    width = 1,                           .ur_prready
		.apb_0_ur_prdata                                   (apb_0_ur_prdata)                                    //  output,   width = 16,                           .ur_prdata
	);

endmodule
