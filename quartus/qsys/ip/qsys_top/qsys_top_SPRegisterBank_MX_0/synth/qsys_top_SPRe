-- qsys_top_SPRegisterBank_MX_0.vhd

-- Generated using ACDS version 21.4 67

library IEEE;
library SPRegisterBank_MX_10;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity qsys_top_SPRegisterBank_MX_0 is
	port (
		avs_address          : in  std_logic_vector(4 downto 0)  := (others => '0'); -- avalon_slave_0.address
		avs_chipselect       : in  std_logic                     := '0';             --               .chipselect
		avs_read_n           : in  std_logic                     := '0';             --               .read_n
		avs_readdata         : out std_logic_vector(31 downto 0);                    --               .readdata
		avs_write_n          : in  std_logic                     := '0';             --               .write_n
		avs_writedata        : in  std_logic_vector(31 downto 0) := (others => '0'); --               .writedata
		clk                  : in  std_logic                     := '0';             --          clock.clk
		coe_fpgaRegRdS       : out std_logic_vector(16 downto 0);                    --  conduit_end_0.coe_fpgaregrds
		coe_fpgaRegWrS       : in  std_logic_vector(0 downto 0)  := (others => '0'); --               .coe_fpgaregwrs
		coe_fpgaRegBuildHash : in  std_logic_vector(31 downto 0) := (others => '0'); --               .coe_fpgaregbuildhash
		coe_fpgaRegBuildTime : in  std_logic_vector(31 downto 0) := (others => '0'); --               .coe_fpgaregbuildtime
		reset_n              : in  std_logic                     := '0'              --          reset.reset_n
	);
end entity qsys_top_SPRegisterBank_MX_0;

architecture rtl of qsys_top_SPRegisterBank_MX_0 is
	component RegisterBank_cmp is
		port (
			avs_address          : in  std_logic_vector(4 downto 0)  := (others => 'X'); -- address
			avs_chipselect       : in  std_logic                     := 'X';             -- chipselect
			avs_read_n           : in  std_logic                     := 'X';             -- read_n
			avs_readdata         : out std_logic_vector(31 downto 0);                    -- readdata
			avs_write_n          : in  std_logic                     := 'X';             -- write_n
			avs_writedata        : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			clk                  : in  std_logic                     := 'X';             -- clk
			coe_fpgaRegRdS       : out std_logic_vector(16 downto 0);                    -- coe_fpgaregrds
			coe_fpgaRegWrS       : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- coe_fpgaregwrs
			coe_fpgaRegBuildHash : in  std_logic_vector(31 downto 0) := (others => 'X'); -- coe_fpgaregbuildhash
			coe_fpgaRegBuildTime : in  std_logic_vector(31 downto 0) := (others => 'X'); -- coe_fpgaregbuildtime
			reset_n              : in  std_logic                     := 'X'              -- reset_n
		);
	end component RegisterBank_cmp;

	for spregisterbank_mx_0 : RegisterBank_cmp
		use entity SPRegisterBank_MX_10.RegisterBank;
begin

	spregisterbank_mx_0 : component RegisterBank_cmp
		port map (
			avs_address          => avs_address,          -- avalon_slave_0.address
			avs_chipselect       => avs_chipselect,       --               .chipselect
			avs_read_n           => avs_read_n,           --               .read_n
			avs_readdata         => avs_readdata,         --               .readdata
			avs_write_n          => avs_write_n,          --               .write_n
			avs_writedata        => avs_writedata,        --               .writedata
			clk                  => clk,                  --          clock.clk
			coe_fpgaRegRdS       => coe_fpgaRegRdS,       --  conduit_end_0.coe_fpgaregrds
			coe_fpgaRegWrS       => coe_fpgaRegWrS,       --               .coe_fpgaregwrs
			coe_fpgaRegBuildHash => coe_fpgaRegBuildHash, --               .coe_fpgaregbuildhash
			coe_fpgaRegBuildTime => coe_fpgaRegBuildTime, --               .coe_fpgaregbuildtime
			reset_n              => reset_n               --          reset.reset_n
		);

end architecture rtl; -- of qsys_top_SPRegisterBank_MX_0
