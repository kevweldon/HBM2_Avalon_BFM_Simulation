// qsys_top_intel_onchip_memory_0.v

// Generated using ACDS version 21.4 67

`timescale 1 ps / 1 ps
module qsys_top_intel_onchip_memory_0 (
		input  wire        clk,         //   clk1.clk
		input  wire [9:0]  address,     //     s1.address
		input  wire        read,        //       .read
		output wire [31:0] readdata,    //       .readdata
		input  wire [3:0]  byteenable,  //       .byteenable
		input  wire        write,       //       .write
		input  wire [31:0] writedata,   //       .writedata
		input  wire        reset,       // reset1.reset
		input  wire        reset_req,   //       .reset_req
		input  wire [9:0]  address2,    //     s2.address
		input  wire        read2,       //       .read
		output wire [31:0] readdata2,   //       .readdata
		input  wire [3:0]  byteenable2, //       .byteenable
		input  wire        write2,      //       .write
		input  wire [31:0] writedata2   //       .writedata
	);

	qsys_top_intel_onchip_memory_0_intel_onchip_memory_110_bugbxqa intel_onchip_memory_0 (
		.clk         (clk),         //   input,   width = 1,   clk1.clk
		.address     (address),     //   input,  width = 10,     s1.address
		.read        (read),        //   input,   width = 1,       .read
		.readdata    (readdata),    //  output,  width = 32,       .readdata
		.byteenable  (byteenable),  //   input,   width = 4,       .byteenable
		.write       (write),       //   input,   width = 1,       .write
		.writedata   (writedata),   //   input,  width = 32,       .writedata
		.reset       (reset),       //   input,   width = 1, reset1.reset
		.reset_req   (reset_req),   //   input,   width = 1,       .reset_req
		.address2    (address2),    //   input,  width = 10,     s2.address
		.read2       (read2),       //   input,   width = 1,       .read
		.readdata2   (readdata2),   //  output,  width = 32,       .readdata
		.byteenable2 (byteenable2), //   input,   width = 4,       .byteenable
		.write2      (write2),      //   input,   width = 1,       .write
		.writedata2  (writedata2)   //   input,  width = 32,       .writedata
	);

endmodule
